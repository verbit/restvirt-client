// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: minivirt/daemon.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SyncRoutesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncRoutesRequest) Reset() {
	*x = SyncRoutesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minivirt_daemon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRoutesRequest) ProtoMessage() {}

func (x *SyncRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minivirt_daemon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRoutesRequest.ProtoReflect.Descriptor instead.
func (*SyncRoutesRequest) Descriptor() ([]byte, []int) {
	return file_minivirt_daemon_proto_rawDescGZIP(), []int{0}
}

var File_minivirt_daemon_proto protoreflect.FileDescriptor

var file_minivirt_daemon_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6d, 0x69, 0x6e, 0x69, 0x76, 0x69, 0x72, 0x74, 0x2f, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x6d, 0x69, 0x6e, 0x69, 0x76, 0x69, 0x72, 0x74, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6d, 0x69, 0x6e, 0x69, 0x76, 0x69, 0x72, 0x74, 0x2f,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6d, 0x69,
	0x6e, 0x69, 0x76, 0x69, 0x72, 0x74, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13, 0x0a, 0x11,
	0x53, 0x79, 0x6e, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x32, 0x9e, 0x0c, 0x0a, 0x0d, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x08, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x12, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x32, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x15, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x08, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x15, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x13, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x12, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x29, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x11, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x07, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x13, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0d, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x15, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0b, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x29, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x11,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x07, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x13, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x14, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07,
	0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x14, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x07, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x14, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x11, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x0c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1b, 0x2e,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x11, 0x2e, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x0c, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x1b, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x50, 0x6f,
	0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x0f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x1b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a,
	0x11, 0x50, 0x75, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x19, 0x2e, 0x50, 0x75, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e,
	0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x00,
	0x12, 0x4b, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x0a, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_minivirt_daemon_proto_rawDescOnce sync.Once
	file_minivirt_daemon_proto_rawDescData = file_minivirt_daemon_proto_rawDesc
)

func file_minivirt_daemon_proto_rawDescGZIP() []byte {
	file_minivirt_daemon_proto_rawDescOnce.Do(func() {
		file_minivirt_daemon_proto_rawDescData = protoimpl.X.CompressGZIP(file_minivirt_daemon_proto_rawDescData)
	})
	return file_minivirt_daemon_proto_rawDescData
}

var file_minivirt_daemon_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_minivirt_daemon_proto_goTypes = []interface{}{
	(*SyncRoutesRequest)(nil),             // 0: internal.SyncRoutesRequest
	(*GetNetworkRequest)(nil),             // 1: GetNetworkRequest
	(*ListNetworksRequest)(nil),           // 2: ListNetworksRequest
	(*CreateNetworkRequest)(nil),          // 3: CreateNetworkRequest
	(*DeleteNetworkRequest)(nil),          // 4: DeleteNetworkRequest
	(*StartDomainRequest)(nil),            // 5: StartDomainRequest
	(*StopDomainRequest)(nil),             // 6: StopDomainRequest
	(*GetDomainRequest)(nil),              // 7: GetDomainRequest
	(*ListDomainsRequest)(nil),            // 8: ListDomainsRequest
	(*CreateDomainRequest)(nil),           // 9: CreateDomainRequest
	(*DeleteDomainRequest)(nil),           // 10: DeleteDomainRequest
	(*DownloadImageRequest)(nil),          // 11: DownloadImageRequest
	(*GetVolumeRequest)(nil),              // 12: GetVolumeRequest
	(*ListVolumesRequest)(nil),            // 13: ListVolumesRequest
	(*CreateVolumeRequest)(nil),           // 14: CreateVolumeRequest
	(*UpdateVolumeRequest)(nil),           // 15: UpdateVolumeRequest
	(*DeleteVolumeRequest)(nil),           // 16: DeleteVolumeRequest
	(*ListVolumeAttachmentsRequest)(nil),  // 17: ListVolumeAttachmentsRequest
	(*VolumeAttachmentIdentifier)(nil),    // 18: VolumeAttachmentIdentifier
	(*PortForwardingIdentifier)(nil),      // 19: PortForwardingIdentifier
	(*ListPortForwardingsRequest)(nil),    // 20: ListPortForwardingsRequest
	(*PutPortForwardingRequest)(nil),      // 21: PutPortForwardingRequest
	(*Network)(nil),                       // 22: Network
	(*ListNetworksResponse)(nil),          // 23: ListNetworksResponse
	(*emptypb.Empty)(nil),                 // 24: google.protobuf.Empty
	(*Domain)(nil),                        // 25: Domain
	(*ListDomainsResponse)(nil),           // 26: ListDomainsResponse
	(*ImageChunk)(nil),                    // 27: ImageChunk
	(*Volume)(nil),                        // 28: Volume
	(*ListVolumesResponse)(nil),           // 29: ListVolumesResponse
	(*ListVolumeAttachmentsResponse)(nil), // 30: ListVolumeAttachmentsResponse
	(*VolumeAttachment)(nil),              // 31: VolumeAttachment
	(*PortForwarding)(nil),                // 32: PortForwarding
	(*ListPortForwardingsResponse)(nil),   // 33: ListPortForwardingsResponse
}
var file_minivirt_daemon_proto_depIdxs = []int32{
	1,  // 0: internal.DaemonService.GetNetwork:input_type -> GetNetworkRequest
	2,  // 1: internal.DaemonService.ListNetworks:input_type -> ListNetworksRequest
	3,  // 2: internal.DaemonService.CreateNetwork:input_type -> CreateNetworkRequest
	4,  // 3: internal.DaemonService.DeleteNetwork:input_type -> DeleteNetworkRequest
	5,  // 4: internal.DaemonService.StartDomain:input_type -> StartDomainRequest
	6,  // 5: internal.DaemonService.StopDomain:input_type -> StopDomainRequest
	7,  // 6: internal.DaemonService.GetDomain:input_type -> GetDomainRequest
	8,  // 7: internal.DaemonService.ListDomains:input_type -> ListDomainsRequest
	9,  // 8: internal.DaemonService.CreateDomain:input_type -> CreateDomainRequest
	10, // 9: internal.DaemonService.DeleteDomain:input_type -> DeleteDomainRequest
	11, // 10: internal.DaemonService.DownloadImage:input_type -> DownloadImageRequest
	12, // 11: internal.DaemonService.GetVolume:input_type -> GetVolumeRequest
	13, // 12: internal.DaemonService.ListVolumes:input_type -> ListVolumesRequest
	14, // 13: internal.DaemonService.CreateVolume:input_type -> CreateVolumeRequest
	15, // 14: internal.DaemonService.UpdateVolume:input_type -> UpdateVolumeRequest
	16, // 15: internal.DaemonService.DeleteVolume:input_type -> DeleteVolumeRequest
	17, // 16: internal.DaemonService.ListVolumeAttachments:input_type -> ListVolumeAttachmentsRequest
	18, // 17: internal.DaemonService.GetVolumeAttachment:input_type -> VolumeAttachmentIdentifier
	18, // 18: internal.DaemonService.AttachVolume:input_type -> VolumeAttachmentIdentifier
	18, // 19: internal.DaemonService.DetachVolume:input_type -> VolumeAttachmentIdentifier
	19, // 20: internal.DaemonService.GetPortForwarding:input_type -> PortForwardingIdentifier
	20, // 21: internal.DaemonService.ListPortForwardings:input_type -> ListPortForwardingsRequest
	21, // 22: internal.DaemonService.PutPortForwarding:input_type -> PutPortForwardingRequest
	19, // 23: internal.DaemonService.DeletePortForwarding:input_type -> PortForwardingIdentifier
	0,  // 24: internal.DaemonService.SyncRoutes:input_type -> internal.SyncRoutesRequest
	22, // 25: internal.DaemonService.GetNetwork:output_type -> Network
	23, // 26: internal.DaemonService.ListNetworks:output_type -> ListNetworksResponse
	22, // 27: internal.DaemonService.CreateNetwork:output_type -> Network
	24, // 28: internal.DaemonService.DeleteNetwork:output_type -> google.protobuf.Empty
	24, // 29: internal.DaemonService.StartDomain:output_type -> google.protobuf.Empty
	24, // 30: internal.DaemonService.StopDomain:output_type -> google.protobuf.Empty
	25, // 31: internal.DaemonService.GetDomain:output_type -> Domain
	26, // 32: internal.DaemonService.ListDomains:output_type -> ListDomainsResponse
	25, // 33: internal.DaemonService.CreateDomain:output_type -> Domain
	24, // 34: internal.DaemonService.DeleteDomain:output_type -> google.protobuf.Empty
	27, // 35: internal.DaemonService.DownloadImage:output_type -> ImageChunk
	28, // 36: internal.DaemonService.GetVolume:output_type -> Volume
	29, // 37: internal.DaemonService.ListVolumes:output_type -> ListVolumesResponse
	28, // 38: internal.DaemonService.CreateVolume:output_type -> Volume
	28, // 39: internal.DaemonService.UpdateVolume:output_type -> Volume
	24, // 40: internal.DaemonService.DeleteVolume:output_type -> google.protobuf.Empty
	30, // 41: internal.DaemonService.ListVolumeAttachments:output_type -> ListVolumeAttachmentsResponse
	31, // 42: internal.DaemonService.GetVolumeAttachment:output_type -> VolumeAttachment
	31, // 43: internal.DaemonService.AttachVolume:output_type -> VolumeAttachment
	24, // 44: internal.DaemonService.DetachVolume:output_type -> google.protobuf.Empty
	32, // 45: internal.DaemonService.GetPortForwarding:output_type -> PortForwarding
	33, // 46: internal.DaemonService.ListPortForwardings:output_type -> ListPortForwardingsResponse
	32, // 47: internal.DaemonService.PutPortForwarding:output_type -> PortForwarding
	24, // 48: internal.DaemonService.DeletePortForwarding:output_type -> google.protobuf.Empty
	24, // 49: internal.DaemonService.SyncRoutes:output_type -> google.protobuf.Empty
	25, // [25:50] is the sub-list for method output_type
	0,  // [0:25] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_minivirt_daemon_proto_init() }
func file_minivirt_daemon_proto_init() {
	if File_minivirt_daemon_proto != nil {
		return
	}
	file_minivirt_domain_proto_init()
	file_minivirt_volume_proto_init()
	file_minivirt_port_forwarding_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_minivirt_daemon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRoutesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_minivirt_daemon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_minivirt_daemon_proto_goTypes,
		DependencyIndexes: file_minivirt_daemon_proto_depIdxs,
		MessageInfos:      file_minivirt_daemon_proto_msgTypes,
	}.Build()
	File_minivirt_daemon_proto = out.File
	file_minivirt_daemon_proto_rawDesc = nil
	file_minivirt_daemon_proto_goTypes = nil
	file_minivirt_daemon_proto_depIdxs = nil
}
